{"title":"Modeling of yield losses caused by the corn stunt disease complex","markdown":{"yaml":{"title":"Modeling of yield losses caused by the corn stunt disease complex ","author":"Marcelo Gonçalves","warning":false,"message":false,"format":"html","editor":"visual"},"headingText":"Dependencies","containsRefs":false,"markdown":"\n\n\nLet's load all the packages we will use in the analyses below. Make sure all packages are installed beforehand. If you don't have them installed yet, you can install them from the CRAN repository.\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(metafor)\nlibrary(psych)\nlibrary(broom)\nlibrary(lme4)\nlibrary(car)\n```\n\n# Data import\n\nFirst, we import two datasets from Google Sheets. `cs_data` contains the main dataset, while `tabela2` includes additional information for joining.\n\nFirst, we import two datasets from Google Sheets. `cs_data` contains the main dataset, while `tabela2` includes additional information for joining. Next, we filter the data to remove rows with missing values and high total spots, and adjust the dataset for the subsequent analyses.\n\nSince the severity scale does not include zero and a score of one represents the absence of the disease, we subtract 1 from the scale so that disease-free cases correspond to 0. This adjustment ensures that the intercept represents the attainable yield.\n\n```{r}\ncs_data <- gsheet2tbl(\n  \"https://docs.google.com/spreadsheets/d/1Q6ES9jfpAwq1apyz7OpyT4X3aYyN_gSyFPkg9x6xar4/edit?gid=0#gid=0\")\ntabela2 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1Q6ES9jfpAwq1apyz7OpyT4X3aYyN_gSyFPkg9x6xar4/edit?gid=1802319739#gid=1802319739\")\n\nexp1 <- cs_data |> \n  filter(!is.na(prod),\n         !is.na(enfez),\n         enfez <= 6,\n         manchas_totais < 5) |> \n  mutate(prod_class = ifelse(prod > 6377, \"alta\", \"baixa\")) |> \n  left_join(tabela2, by = \"cultivar\")\n\n\nsev_dif <- exp1 |> \n  mutate(enfez = enfez - 1)\n\n\ndata1 <- sev_dif |> \n  group_by(estudo, tolerance_ad, cultivar, rep, cidade, ano, ensaio, prod_class, manchas_totais) |> \n  summarize(prod = prod,\n            sev = enfez) |> \n  mutate(trial = interaction(cidade, ano, ensaio)) \n\n```\n\n# Exploratory Data Analysis\n\nExploratory analyses were performed to check the data distribution. We used histograms and boxplots to provide a better description and visualization of the data.\n\n### Median\n\n```{r}\nef_median <- exp1 |> \n  group_by(estudo, ano, cultivar) |> \n  summarise(mean_sev = mean(enfez),\n            mean_yld = mean(prod),\n            median_sev = median(enfez),\n            median_prod = median(prod))\n\n\nef_median |> \n  group_by(ano) |> \n  summarise(median_sev = mean(median_sev),\n            median_prod = mean(median_prod))\n```\n\n```{r}\nsummary(ef_median)\n```\n\n### Histogram\n\n```{r}\ndist_sev <- ef_median |>\n  ggplot(aes(median_sev)) +\n  geom_histogram(bins = 10, \n                 fill = \"#3A5FCD\",\n                 color = \"darkblue\",\n                 linewidth = 0.5) +\n  labs(x = \"Severity  score\", y = \"\") +\n  geom_vline(xintercept = 3.637, size = 1.3, linetype = 2)+\n  theme_bw()\n\n\ndist_prod<- ef_median |>\n  ggplot(aes(median_prod)) +\n  geom_histogram(bins = 20, fill = \"#3A5FCD\",\n                 color = \"darkblue\",\n                 linewidth = 0.5) +\n  labs(x = \"Yield (kg/ha)\", y = \"\") +\n   geom_vline(xintercept = 6270, size = 1.3, linetype = 2)+\n  theme_bw()\n```\n\n### Boxplot\n\n```{r}\nbox_sev <- ef_median |>\n  ggplot(aes(factor(ano), median_sev)) +\n  geom_boxplot(outlier.shape = NA, fill = \"#3A5FCD\", color = \"darkblue\") +\n  theme_bw() +\n  labs(x = \"Second crop season\", y = \"Severity score\")\n\n\n\nbox_prod<- ef_median |>\n  ggplot(aes(factor(ano), median_prod)) +\n  geom_boxplot(outlier.shape = NA, fill = \"#3A5FCD\", color = \"darkblue\") +\n  theme_bw() +\n  labs(x = \"Second crop season\", y = \"Yield (kg/ha)\")\n\n```\n\nFinal figure used in the article.\n\n```{r}\nFig2 <- (dist_sev | box_sev)/\n(dist_prod | box_prod) +\n  plot_annotation(tag_levels = \"A\")\nFig2\n```\n\n### Individual regressions\n\nIndividual regression analyses were performed for each of the 22 studies to examine the trend in the relationship between the two variables (CSCD severity and corn yield).\n\n```{r}\ngc1 <- ef_median |> \n  ggplot(aes(mean_sev, mean_yld))+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#3A5FCD\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) + \n  theme_bw() +\n  facet_wrap(~estudo,\n             ncol = 6) +\n  labs(y = \"Yield (Kg/ha)\",x = \"Severity score\")\n\ngc1\n```\n\n### Individual correlation\n\nWe also performed individual correlation analyses for the 22 studies and applied the Fisher Z-transformation.\n\n```{r}\ncorrelation_data <- data1 |> \n  group_by(estudo) |> \n  summarise(r_sev_yld = cor(sev, prod), \n            n = n(), \n            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)), \n            V = 1/(n-3), \n            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |>  \n  filter(r_sev_yld != \"NA\") |> \n  filter(n > 4)\n\n\nsummary(correlation_data)\n```\n\nIndividual values were plotted to improve visualization.\n\n```{r}\nr <- correlation_data %>% \n  ggplot(aes(r_sev_yld)) +\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 linewidth = 1) +\n  theme_bw()+\n  ylab(\"Frequency\") +\n  xlab(expression(\"Pearson's coefficient\")) +\n    theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\nz <- correlation_data %>% \n  ggplot(aes(Z_sev_yld))+\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 linewidth = 1) +\n  theme_bw()+\n  ylab(\"Frequency\") +\n  xlab(expression(\"Fisher's \" * \"\" * italic(Z) * \"\")) +\n    theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\n```\n\n```{r}\nfit_all <- sev_dif |> \n  group_by(estudo) |> \n  do(tidy(lm(.$prod ~ .$enfez), conf.int=TRUE))\n\nsummary(fit_all)\n```\n\n```{r}\nIntercepts <- fit_all |> \n  filter(term == \"(Intercept)\")\n\nSlopes <-  fit_all |> \n  filter(term == \".$enfez\")\n```\n\n```{r}\nsummary(Slopes)\n```\n\n```{r}\nb0 <- fit_all |> \n  filter(term == \"(Intercept)\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n  theme_bw()+\n  labs(x = \"Intercept\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 20),\n    axis.title.y = element_text(size = 20),\n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\nb1 <- fit_all |> \n  filter(term == \".$enfez\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n    #geom_vline(xintercept = -60.2210    , size = 1.5, linetype = 2, color = \"black\")+\n  theme_bw()+\n  labs(x = \"Slope\", y = \"Frequency\")+\n   theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n```\n\nFinal figure used in the article\n\n```{r}\nfs1 = (r+z)/(b0+b1) + plot_annotation(tag_levels = \"A\") \nfs1\n```\n\n# **Mixed-effects model**\n\nWe fitted a mixed-effects model to estimate the effect of severity on yield, including random slopes and intercepts for each study to account for variation among studies.\n\n```{r}\nmm1 <- lmer(prod ~ sev  + (sev | estudo), data = data1,\n            REML = F)\nsummary(mm1)\n```\n\nWe extracted the variance from the random effects of the mixed-effects model and obtained the residual variance. Using the intercept and slope variances, we calculated τ² (total variance of the random effects) and then computed I² to quantify the proportion of total variability due to heterogeneity between studies.\n\n```{r}\n# Extracting variance from random effects\nrandom_effects_variance <- VarCorr(mm1)\n\n# Accessing the variance/covariance matrix of the 'cod' group\nvar_random_effects <- random_effects_variance$estudo\n\n# Residual variance (error)\nsigma2 <- sigma(mm1)^2\n\n# τ² (variance of random effects)\n# The variance of the intercept is in the first row and column\nvar_intercept <- var_random_effects[1, 1]\n\n# The slope variance is in the second row and column\nvar_slope <- var_random_effects[2, 2]\n\n# Calculate I²\ntau2 <- var_intercept + var_slope  # Total variance of random effects\nI2 <- (tau2 / (tau2 + sigma2)) * 100  # Calculation of I²\n\nI2\n```\n\nWe calculate confidence intervals for the mixed-effects model undefinedsing the profile likelihood\n\n```{r}\nconfint(mm1, method = \"profile\")  # Interval based on likelihood profile\n```\n\nData distribution from individual analyses of 22 studies. Blue points represent observed data, and gray lines indicate individual linear regressions.\n\n```{r}\n\nfig3a <- ggplot() +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  scale_y_continuous(breaks = seq(0, 14000, by = 2000), limits = c(0, 14000)) +\n  geom_abline(aes(slope = Slopes$estimate, intercept = Intercepts$estimate), \n              size = 1, alpha = 0.5, color = \"darkgray\") +\n geom_point(data = ef_median, aes(x = mean_sev-1, y = mean_yld),\n             color = \"#3A5FCD\", shape = 16, alpha = 0.3) +\n  labs(x = \"Scale score -1\", y = \"Yield (kg/ha)\") +\n  theme_bw() +\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        plot.title = element_text(hjust = 0.5, size = 18))\nfig3a\n\n```\n\nMeta-analysis using a mixed-effects model. Blue line represents the average estimated relationship (common slope), and black dashed lines indicate the 95% confidence interval for the average regression.\n\n```{r}\nr_regression_misto <- data.frame(\n  estimate = c(8229.026, -1043.024),\n  low = c(7050.872811 , -1217.903252),\n  high = c(9342.37841711, -869.23656135)\n)\n\nfig3b <- ggplot() +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  scale_y_continuous(breaks = seq(0, 14000, by = 2000), limits = c(0, 14000)) +\n  geom_abline(data = r_regression_misto, \n              aes(slope = estimate[2], intercept = estimate[1]), \n              size = 1.5, color = \"#3A5FCD\") +\n  geom_abline(data = r_regression_misto, \n              aes(intercept = high[1], slope = high[2]), \n              size = 1.2, linetype = 2) +\n  geom_abline(data = r_regression_misto, \n              aes(intercept = low[1], slope = low[2]), \n              size = 1.2, linetype = 2) +\n  labs(x = \"Scale score -1\", y = \"Yield (kg/ha)\") +\n  theme_bw() +\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        plot.title = element_text(hjust = 0.5, size = 18))\nfig3b\n```\n\nCalculation of damage when the disease reaches the maximum severity score.\n\n```{r}\n# 8229.026   -1043.024 \ny1 = 8229.03\n\ny6 = 8229.03 + (-1043.02 * 5)\n\n\nmax_damage = ((y1 - y6) / y1) * 100\nmax_damage\n```\n\nCalculation of the damage coefficient\n\n```{r}\n\nper_unit_loss = -1043.024 / y1 * 100\nper_unit_loss\n```\n\n# Creation of susceptibility levels\n\nWe fitted a mixed-effects model for severity, considering random effects of hybrid, year, study, and their interaction, and extracted BLUPs for each hybrid. The BLUPs were scaled, and a Euclidean distance matrix was calculated to perform hierarchical clustering using Ward’s method. The dendrogram was cut into two groups, classifying hybrids with higher BLUPs as susceptible and those with lower BLUPs as moderately susceptible, and the results were visualized for interpretation.\n\n```{r}\n# Ensure factors\ndf <- data1 |> \n  mutate(\n    HYBRID = as.factor(cultivar),\n    YEAR = as.factor(ano),\n    LOC = as.factor(estudo),\n    REP = as.factor(rep)\n  )\n\n# Fit mixed model: random effect for HYBRID, optionally random LOC:YEAR\nmodel <- lmer(sev ~ (1|HYBRID) + (1|YEAR) + (1|LOC) + (1|LOC:YEAR), data = df)\n\nblups <- ranef(model)$HYBRID |> \n  rownames_to_column(\"HYBRID\") |> \n  rename(BLUP = '(Intercept)') |> \n  arrange(BLUP)\n\nblups2 <- ranef(model)$HYBRID |> \n  rownames_to_column(\"HYBRID\") |> \n  rename(BLUP = '(Intercept)') |> \n  arrange(BLUP)\n\n# Assuming 'blups' contains HYBRID and BLUP columns from lmer\nblup_matrix <- blups |> \n  column_to_rownames(\"HYBRID\")\n\n# Scale the BLUPs (optional but common in clustering)\nblup_scaled <- scale(blup_matrix)\n\n# Compute distance and apply hierarchical clustering\ndist_blup <- dist(blup_scaled)\nclust <- hclust(dist_blup, method = \"ward.D2\")\n\n# Cut the tree into 2 groups\nblups$GROUP <- cutree(clust, k = 2)\n\n# Optional: sort for interpretation\nblups <- blups  |> \n  arrange(BLUP) |> \n  mutate(cultivar = HYBRID) |> \n  select(cultivar, GROUP)\n\nblups_final <- left_join(blups, blups2, by = c(\"cultivar\" = \"HYBRID\"))\n\n\n# View the clustered groups\nprint(blups)\n\nfig_blups <- factoextra::fviz_dend(\n  clust,\n  k = 2,                                # number of groups\n  rect = FALSE,                          # draw rectangles around groups\n  rect_fill = TRUE,                     # fill the rectangles\n  rect_border = \"gray30\",              # color of the rectangle borders\n  cex = 0.8,                            # size of the label text\n  k_colors = c(\"#3A5FCD\", \"red\"),      # colors of the groups\n  color_labels_by_k = TRUE,            # color labels according to groups\n  labels_track_height = 0.8,           # height of the label track\n  horiz = TRUE,\n  main = \" \",\n  ) +  labs(y = \"Euclidean distance \") +\n  theme(axis.text.x = element_text(size = 18),\n        axis.title.x = element_text(size = 20) # increase numbers on the Y axis\n  ) +\n  theme_bw()\nprint(fig_blups)\n\n```\n\nData preparation\n\n```{r}\ndata2 <- left_join(data1, blups)\n\n\ndata3 <- data2 |> \n  group_by(estudo, tolerance_ad, cultivar, GROUP, prod_class) |> \n  summarize(sev = mean(sev),\n            prod = mean(prod))\n\n\n```\n\n```{r}\n# Fit random coefficients model: varying intercept and slope by STUDY\n\ndf <- data3 |> \n  mutate(GROUP = factor(GROUP),\n         STUDY = factor(estudo))  # If not already a factor\n\n\nmodel0 <- lmer(prod ~ sev  + (sev | STUDY), data = df)\nmodel <- lmer(prod ~ sev * GROUP + (sev | STUDY), data = df)\nanova(model0, model)\ncar::Anova(model)\n\n# Random effect structure\nranef(model)\n\n# Optional: extract slope and intercept per STUDY\ncoef(model)$STUDY\n\n\n```\n\n# Moderators\n\n### Susceptibility levels used as a moderator\n\nAdding the interaction between severity and susceptibility group did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n# susceptibility levels\n\nmodel_full <- lmer(prod ~ sev * GROUP + (sev | STUDY), data = df)\nmodel_no_interaction <- lmer(prod ~ sev + GROUP + (sev | STUDY), data = df)\nmodel_no_group <- lmer(prod ~ sev + (sev | STUDY), data = df)\nanova(model_no_group, model_no_interaction, model_full)\n\n```\n\n### Tolerance group used as a moderator\n\nAdding the interaction between severity andtolerance group did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n# tolerance group\ndf2 <- data1 |> \n  mutate(tolerance_ad = factor(tolerance_ad),\n         estudo = factor(estudo))\n\nmodel_full <- lmer(prod ~ sev * tolerance_ad + (sev | estudo), data = df2)\nmodel_no_interaction <- lmer(prod ~ sev + tolerance_ad + (sev | estudo), data = df2)\nmodel_no_group <- lmer(prod ~ sev + (sev | estudo), data = df2)\nanova(model_no_group, model_no_interaction, model_full)\n```\n\n### Yield class used as a moderator\n\nAdding the interaction between severity and yield class improved the model fit.\n\n```{r}\n# prod class\ndf3 <- data1 |> \n  mutate(prod_class = factor(prod_class),\n         estudo = factor(estudo))  # If not already a factor\n\nmodel_full <- lmer(prod ~ sev * prod_class + (sev | estudo), data = df3)\nmodel_no_interaction <- lmer(prod ~ sev + prod_class + ( sev | estudo), data = df3)\nmodel_no_group <- lmer(prod ~ sev + (sev | estudo), data = df3)\nanova(model_no_group, model_no_interaction, model_full)\n\nsummary(model_full)\n```\n\nGraphical visualization of how yield class affects the relationship as a moderating variable.\n\n```{r}\nfig_pc1 <- data3 |> \n  ggplot(aes(sev + 1, prod, color = factor(prod_class))) +\n  scale_color_manual(\n    name = \"Yield Class\", \n    values = c(\"baixa\" = \"#ff9688\", \"alta\" = \"#3A5FCD\"),\n    labels = c(\"baixa\" = \"Low\", \"alta\" = \"High\")\n  ) +\n  theme_bw()+\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~estudo)+\n  labs(y = \"Yield (Kg/ha)\",x = \"Severity score\")\n\nfig_pc1\n```\n\n### Severity class used as a moderator\n\nAdding the interaction between severity and severity class did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n#sev class\nmed_sev <- sev_dif |> \n  summarise(med_sev = median(enfez, na.rm = TRUE)) |> \n  pull(med_sev)\n\ndf4 <- data1 |> \n  mutate(sev_class = factor(ifelse(sev > med_sev, \"alta\", \"baixa\")))\n\nmodel_full <- lmer(prod ~ sev * sev_class + (sev | estudo), data = df4)\nmodel_no_interaction <- lmer(prod ~ sev + sev_class + (sev | estudo), data = df4)\nmodel_no_group <- lmer(prod ~ sev + (sev | estudo), data = df4)\nanova(model_no_group, model_no_interaction, model_full)\n\n\n```\n\n### Foliar spot pressure used as a moderator\n\nAdding the interaction between severity and foliar spot pressure did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n#foliar spot pressure\nmed_spots <- sev_dif |> \n  summarise(med_spots = median(manchas_totais, na.rm = TRUE)) |> \n  pull(med_spots)\n\ndf5 <- sev_dif |> \n  mutate(spot_press = factor(ifelse(manchas_totais > med_spots, \"alta\", \"baixa\")))\n\nmodel_full <- lmer(prod ~ enfez * spot_press + (enfez | estudo), data = df5)\nmodel_no_interaction <- lmer(prod ~ enfez + spot_press + (enfez | estudo), data = df5)\nmodel_no_group <- lmer(prod ~ enfez + (enfez | estudo), data = df5)\nanova(model_no_group, model_no_interaction, model_full)\n        \n\n```\n\n# How does yield class affect corn production?\n\nWe adjusted the model coefficients for the high- and low-productivity classes and then calculated the damage coefficient for each of them.\n\n```{r}\n\nintercept_baixa <- 6867.64\nslope_baixa <- -868.14\n\nintercept_alta <- intercept_baixa + 2160.70\nslope_alta <- slope_baixa + 197.18\n\npul_baixa = (slope_baixa/intercept_baixa) * 100\npul_alta = (slope_alta) / (intercept_alta) * 100\n\npul_baixa\npul_alta\n```\n\nThe confidence interval was calculated.\n\n```{r}\nconfint(model_full)\n```\n\nAll of the above information was transformed into a graph for better visualization.\n\n```{r}\n\n# Confidence intervals that you obtained\nci <- tribble(\n  ~term,                ~low,          ~high,\n  \"(Intercept)\",        6060.447,      7647.010,\n  \"sev\",               -1049.560,     -697.426,\n  \"prod_classalta\",     1756.064,      2558.214,\n  \"sev:prod_classalta\",   32.024,       366.974\n)\n\n# Sequence of severity\nsev_seq <- seq(0, 5, length.out = 100)\n\n# ---- Low productivity ----\nintercept_baixa_low  <- ci$low[ci$term==\"(Intercept)\"]\nintercept_baixa_high <- ci$high[ci$term==\"(Intercept)\"]\nslope_baixa_low      <- ci$low[ci$term==\"sev\"]\nslope_baixa_high     <- ci$high[ci$term==\"sev\"]\n\ndf_baixa <- tibble(\n  sev = sev_seq,\n  fit_low  = intercept_baixa_low  + slope_baixa_low  * sev,\n  fit_high = intercept_baixa_high + slope_baixa_high * sev,\n  prod_class = \"Low\"\n)\n\n# ---- High productivity ----\nintercept_alta_low  <- intercept_baixa_low  + ci$low[ci$term==\"prod_classalta\"]\nintercept_alta_high <- intercept_baixa_high + ci$high[ci$term==\"prod_classalta\"]\nslope_alta_low      <- slope_baixa_low  + ci$low[ci$term==\"sev:prod_classalta\"]\nslope_alta_high     <- slope_baixa_high + ci$high[ci$term==\"sev:prod_classalta\"]\n\ndf_alta <- tibble(\n  sev = sev_seq,\n  fit_low  = intercept_alta_low  + slope_alta_low  * sev,\n  fit_high = intercept_alta_high + slope_alta_high * sev,\n  prod_class = \"High\"\n)\n\n# Combine everything\ndf_all <- bind_rows(df_baixa, df_alta)\n\n# Plot the graph\nYc_plot <- ggplot(df_all, aes(x = sev, color = prod_class, fill = prod_class)) +\n  geom_ribbon(aes(ymin = fit_low, ymax = fit_high), alpha = 0.2, color = NA) +\n  geom_line(aes(y = (fit_low + fit_high)/2), size = 1.5) +\n  scale_color_manual(values = c(\"Low\" = \"red\", \"High\" = \"#3A5FCD\")) +\n  scale_fill_manual(values = c(\"Low\" = \"red\", \"High\" = \"#3A5FCD\")) +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  scale_y_continuous(breaks = seq(0, 12000, by = 2000), limits = c(0, 12000)) +\n  labs(\n    x = \"Scale score -1\", \n    y = \"Yield (kg/ha)\",\n    color = \"Yield class\",\n    fill  = \"Yield class\"\n  ) +\n  theme_bw(base_size = 18) +\n  theme(\n     panel.grid.minor = element_blank(),\n    text = element_text(size = 20),\n    axis.text.x = element_text(size = 18),\n    axis.text.y = element_text(size = 18),\n    legend.position = \"top\",\n    plot.title = element_text(hjust = 0.5, size = 18)\n  ) +\n  annotate(\"text\", x = 1.5, y = 10300, label = \"DC: -7.43%\", color = \"#3A5FCD\", hjust = 0) +\n  annotate(\"text\", x = 1, y = 3000, label = \"DC: -12.64%\", color = \"red\", hjust = 0)\n\nYc_plot\n\n```\n\nA graph was created showing the relative yield loss (%) as a function of disease severity.\n\n```{r}\n# Definitions of the mean DCs (as you already noted)\ndc_high <- -7.43   # %\ndc_low  <- -12.64  # %\n\n# Sequence of severity\nsev_seq <- 0:5\n\n# Create dataframe for plotting\ndf_rel <- tibble(\n  sev = rep(sev_seq, 2),\n  DC  = c(dc_low * sev_seq, dc_high * sev_seq),   # cumulative loss\n  prod_class = rep(c(\"Low\", \"High\"), each = length(sev_seq))\n)\n\n# Relative plot\nDC_plot <- ggplot(df_rel, aes(x = sev, y = DC, color = prod_class)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 3) +\n  scale_color_manual(values = c(\"Low\" = \"red\", \"High\" = \"#3A5FCD\")) +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  labs(\n    x = \"Scale score -1\",\n    y = \"Relative Yield Loss (%)\",\n    color = \"Yield class\"\n  ) +\n  theme_bw(base_size = 18) +\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_text(size = 16),\n    axis.text.y = element_text(size = 16)\n  ) +\n  annotate(\"text\", x = 5, y = dc_high*5, \n           label = paste0(\"Max RYL: \", dc_high*5, \"%\"), color = \"#3A5FCD\", hjust = 1, vjust = -5) +\n  annotate(\"text\", x = 5, y = dc_low*5, \n           label = paste0(\"Max RYL: \", dc_low*5, \"%\"), color = \"red\", hjust = 1.4, vjust = 0.1)\n\nDC_plot\n\n```\n\nDue to the observed difference, we investigated whether plants from different yield classes exhibited distinct severity distributions through a density plot.\n\n```{r}\nden_ydcl <- ggplot(data3, aes(x = sev + 1, fill = prod_class)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"baixa\" = \"#ff9688\", \"alta\" = \"#3A5FCD\"), \n                     labels = c(\"baixa\" = \"Low\", \"alta\" = \"High\")) +\n  scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, 1)) +\n  labs(\n    x = \"Scale score -1\",\n    y = \"Density\",\n    fill = \"Yield Class\"\n  ) +\n  theme_bw()\nden_ydcl\n```\n","srcMarkdownNoYaml":"\n\n# Dependencies\n\nLet's load all the packages we will use in the analyses below. Make sure all packages are installed beforehand. If you don't have them installed yet, you can install them from the CRAN repository.\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(metafor)\nlibrary(psych)\nlibrary(broom)\nlibrary(lme4)\nlibrary(car)\n```\n\n# Data import\n\nFirst, we import two datasets from Google Sheets. `cs_data` contains the main dataset, while `tabela2` includes additional information for joining.\n\nFirst, we import two datasets from Google Sheets. `cs_data` contains the main dataset, while `tabela2` includes additional information for joining. Next, we filter the data to remove rows with missing values and high total spots, and adjust the dataset for the subsequent analyses.\n\nSince the severity scale does not include zero and a score of one represents the absence of the disease, we subtract 1 from the scale so that disease-free cases correspond to 0. This adjustment ensures that the intercept represents the attainable yield.\n\n```{r}\ncs_data <- gsheet2tbl(\n  \"https://docs.google.com/spreadsheets/d/1Q6ES9jfpAwq1apyz7OpyT4X3aYyN_gSyFPkg9x6xar4/edit?gid=0#gid=0\")\ntabela2 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1Q6ES9jfpAwq1apyz7OpyT4X3aYyN_gSyFPkg9x6xar4/edit?gid=1802319739#gid=1802319739\")\n\nexp1 <- cs_data |> \n  filter(!is.na(prod),\n         !is.na(enfez),\n         enfez <= 6,\n         manchas_totais < 5) |> \n  mutate(prod_class = ifelse(prod > 6377, \"alta\", \"baixa\")) |> \n  left_join(tabela2, by = \"cultivar\")\n\n\nsev_dif <- exp1 |> \n  mutate(enfez = enfez - 1)\n\n\ndata1 <- sev_dif |> \n  group_by(estudo, tolerance_ad, cultivar, rep, cidade, ano, ensaio, prod_class, manchas_totais) |> \n  summarize(prod = prod,\n            sev = enfez) |> \n  mutate(trial = interaction(cidade, ano, ensaio)) \n\n```\n\n# Exploratory Data Analysis\n\nExploratory analyses were performed to check the data distribution. We used histograms and boxplots to provide a better description and visualization of the data.\n\n### Median\n\n```{r}\nef_median <- exp1 |> \n  group_by(estudo, ano, cultivar) |> \n  summarise(mean_sev = mean(enfez),\n            mean_yld = mean(prod),\n            median_sev = median(enfez),\n            median_prod = median(prod))\n\n\nef_median |> \n  group_by(ano) |> \n  summarise(median_sev = mean(median_sev),\n            median_prod = mean(median_prod))\n```\n\n```{r}\nsummary(ef_median)\n```\n\n### Histogram\n\n```{r}\ndist_sev <- ef_median |>\n  ggplot(aes(median_sev)) +\n  geom_histogram(bins = 10, \n                 fill = \"#3A5FCD\",\n                 color = \"darkblue\",\n                 linewidth = 0.5) +\n  labs(x = \"Severity  score\", y = \"\") +\n  geom_vline(xintercept = 3.637, size = 1.3, linetype = 2)+\n  theme_bw()\n\n\ndist_prod<- ef_median |>\n  ggplot(aes(median_prod)) +\n  geom_histogram(bins = 20, fill = \"#3A5FCD\",\n                 color = \"darkblue\",\n                 linewidth = 0.5) +\n  labs(x = \"Yield (kg/ha)\", y = \"\") +\n   geom_vline(xintercept = 6270, size = 1.3, linetype = 2)+\n  theme_bw()\n```\n\n### Boxplot\n\n```{r}\nbox_sev <- ef_median |>\n  ggplot(aes(factor(ano), median_sev)) +\n  geom_boxplot(outlier.shape = NA, fill = \"#3A5FCD\", color = \"darkblue\") +\n  theme_bw() +\n  labs(x = \"Second crop season\", y = \"Severity score\")\n\n\n\nbox_prod<- ef_median |>\n  ggplot(aes(factor(ano), median_prod)) +\n  geom_boxplot(outlier.shape = NA, fill = \"#3A5FCD\", color = \"darkblue\") +\n  theme_bw() +\n  labs(x = \"Second crop season\", y = \"Yield (kg/ha)\")\n\n```\n\nFinal figure used in the article.\n\n```{r}\nFig2 <- (dist_sev | box_sev)/\n(dist_prod | box_prod) +\n  plot_annotation(tag_levels = \"A\")\nFig2\n```\n\n### Individual regressions\n\nIndividual regression analyses were performed for each of the 22 studies to examine the trend in the relationship between the two variables (CSCD severity and corn yield).\n\n```{r}\ngc1 <- ef_median |> \n  ggplot(aes(mean_sev, mean_yld))+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#3A5FCD\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) + \n  theme_bw() +\n  facet_wrap(~estudo,\n             ncol = 6) +\n  labs(y = \"Yield (Kg/ha)\",x = \"Severity score\")\n\ngc1\n```\n\n### Individual correlation\n\nWe also performed individual correlation analyses for the 22 studies and applied the Fisher Z-transformation.\n\n```{r}\ncorrelation_data <- data1 |> \n  group_by(estudo) |> \n  summarise(r_sev_yld = cor(sev, prod), \n            n = n(), \n            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)), \n            V = 1/(n-3), \n            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |>  \n  filter(r_sev_yld != \"NA\") |> \n  filter(n > 4)\n\n\nsummary(correlation_data)\n```\n\nIndividual values were plotted to improve visualization.\n\n```{r}\nr <- correlation_data %>% \n  ggplot(aes(r_sev_yld)) +\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 linewidth = 1) +\n  theme_bw()+\n  ylab(\"Frequency\") +\n  xlab(expression(\"Pearson's coefficient\")) +\n    theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\nz <- correlation_data %>% \n  ggplot(aes(Z_sev_yld))+\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 linewidth = 1) +\n  theme_bw()+\n  ylab(\"Frequency\") +\n  xlab(expression(\"Fisher's \" * \"\" * italic(Z) * \"\")) +\n    theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\n```\n\n```{r}\nfit_all <- sev_dif |> \n  group_by(estudo) |> \n  do(tidy(lm(.$prod ~ .$enfez), conf.int=TRUE))\n\nsummary(fit_all)\n```\n\n```{r}\nIntercepts <- fit_all |> \n  filter(term == \"(Intercept)\")\n\nSlopes <-  fit_all |> \n  filter(term == \".$enfez\")\n```\n\n```{r}\nsummary(Slopes)\n```\n\n```{r}\nb0 <- fit_all |> \n  filter(term == \"(Intercept)\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n  theme_bw()+\n  labs(x = \"Intercept\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 20),\n    axis.title.y = element_text(size = 20),\n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\nb1 <- fit_all |> \n  filter(term == \".$enfez\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n    #geom_vline(xintercept = -60.2210    , size = 1.5, linetype = 2, color = \"black\")+\n  theme_bw()+\n  labs(x = \"Slope\", y = \"Frequency\")+\n   theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n```\n\nFinal figure used in the article\n\n```{r}\nfs1 = (r+z)/(b0+b1) + plot_annotation(tag_levels = \"A\") \nfs1\n```\n\n# **Mixed-effects model**\n\nWe fitted a mixed-effects model to estimate the effect of severity on yield, including random slopes and intercepts for each study to account for variation among studies.\n\n```{r}\nmm1 <- lmer(prod ~ sev  + (sev | estudo), data = data1,\n            REML = F)\nsummary(mm1)\n```\n\nWe extracted the variance from the random effects of the mixed-effects model and obtained the residual variance. Using the intercept and slope variances, we calculated τ² (total variance of the random effects) and then computed I² to quantify the proportion of total variability due to heterogeneity between studies.\n\n```{r}\n# Extracting variance from random effects\nrandom_effects_variance <- VarCorr(mm1)\n\n# Accessing the variance/covariance matrix of the 'cod' group\nvar_random_effects <- random_effects_variance$estudo\n\n# Residual variance (error)\nsigma2 <- sigma(mm1)^2\n\n# τ² (variance of random effects)\n# The variance of the intercept is in the first row and column\nvar_intercept <- var_random_effects[1, 1]\n\n# The slope variance is in the second row and column\nvar_slope <- var_random_effects[2, 2]\n\n# Calculate I²\ntau2 <- var_intercept + var_slope  # Total variance of random effects\nI2 <- (tau2 / (tau2 + sigma2)) * 100  # Calculation of I²\n\nI2\n```\n\nWe calculate confidence intervals for the mixed-effects model undefinedsing the profile likelihood\n\n```{r}\nconfint(mm1, method = \"profile\")  # Interval based on likelihood profile\n```\n\nData distribution from individual analyses of 22 studies. Blue points represent observed data, and gray lines indicate individual linear regressions.\n\n```{r}\n\nfig3a <- ggplot() +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  scale_y_continuous(breaks = seq(0, 14000, by = 2000), limits = c(0, 14000)) +\n  geom_abline(aes(slope = Slopes$estimate, intercept = Intercepts$estimate), \n              size = 1, alpha = 0.5, color = \"darkgray\") +\n geom_point(data = ef_median, aes(x = mean_sev-1, y = mean_yld),\n             color = \"#3A5FCD\", shape = 16, alpha = 0.3) +\n  labs(x = \"Scale score -1\", y = \"Yield (kg/ha)\") +\n  theme_bw() +\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        plot.title = element_text(hjust = 0.5, size = 18))\nfig3a\n\n```\n\nMeta-analysis using a mixed-effects model. Blue line represents the average estimated relationship (common slope), and black dashed lines indicate the 95% confidence interval for the average regression.\n\n```{r}\nr_regression_misto <- data.frame(\n  estimate = c(8229.026, -1043.024),\n  low = c(7050.872811 , -1217.903252),\n  high = c(9342.37841711, -869.23656135)\n)\n\nfig3b <- ggplot() +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  scale_y_continuous(breaks = seq(0, 14000, by = 2000), limits = c(0, 14000)) +\n  geom_abline(data = r_regression_misto, \n              aes(slope = estimate[2], intercept = estimate[1]), \n              size = 1.5, color = \"#3A5FCD\") +\n  geom_abline(data = r_regression_misto, \n              aes(intercept = high[1], slope = high[2]), \n              size = 1.2, linetype = 2) +\n  geom_abline(data = r_regression_misto, \n              aes(intercept = low[1], slope = low[2]), \n              size = 1.2, linetype = 2) +\n  labs(x = \"Scale score -1\", y = \"Yield (kg/ha)\") +\n  theme_bw() +\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),\n        axis.text.y = element_text(size = 18),\n        plot.title = element_text(hjust = 0.5, size = 18))\nfig3b\n```\n\nCalculation of damage when the disease reaches the maximum severity score.\n\n```{r}\n# 8229.026   -1043.024 \ny1 = 8229.03\n\ny6 = 8229.03 + (-1043.02 * 5)\n\n\nmax_damage = ((y1 - y6) / y1) * 100\nmax_damage\n```\n\nCalculation of the damage coefficient\n\n```{r}\n\nper_unit_loss = -1043.024 / y1 * 100\nper_unit_loss\n```\n\n# Creation of susceptibility levels\n\nWe fitted a mixed-effects model for severity, considering random effects of hybrid, year, study, and their interaction, and extracted BLUPs for each hybrid. The BLUPs were scaled, and a Euclidean distance matrix was calculated to perform hierarchical clustering using Ward’s method. The dendrogram was cut into two groups, classifying hybrids with higher BLUPs as susceptible and those with lower BLUPs as moderately susceptible, and the results were visualized for interpretation.\n\n```{r}\n# Ensure factors\ndf <- data1 |> \n  mutate(\n    HYBRID = as.factor(cultivar),\n    YEAR = as.factor(ano),\n    LOC = as.factor(estudo),\n    REP = as.factor(rep)\n  )\n\n# Fit mixed model: random effect for HYBRID, optionally random LOC:YEAR\nmodel <- lmer(sev ~ (1|HYBRID) + (1|YEAR) + (1|LOC) + (1|LOC:YEAR), data = df)\n\nblups <- ranef(model)$HYBRID |> \n  rownames_to_column(\"HYBRID\") |> \n  rename(BLUP = '(Intercept)') |> \n  arrange(BLUP)\n\nblups2 <- ranef(model)$HYBRID |> \n  rownames_to_column(\"HYBRID\") |> \n  rename(BLUP = '(Intercept)') |> \n  arrange(BLUP)\n\n# Assuming 'blups' contains HYBRID and BLUP columns from lmer\nblup_matrix <- blups |> \n  column_to_rownames(\"HYBRID\")\n\n# Scale the BLUPs (optional but common in clustering)\nblup_scaled <- scale(blup_matrix)\n\n# Compute distance and apply hierarchical clustering\ndist_blup <- dist(blup_scaled)\nclust <- hclust(dist_blup, method = \"ward.D2\")\n\n# Cut the tree into 2 groups\nblups$GROUP <- cutree(clust, k = 2)\n\n# Optional: sort for interpretation\nblups <- blups  |> \n  arrange(BLUP) |> \n  mutate(cultivar = HYBRID) |> \n  select(cultivar, GROUP)\n\nblups_final <- left_join(blups, blups2, by = c(\"cultivar\" = \"HYBRID\"))\n\n\n# View the clustered groups\nprint(blups)\n\nfig_blups <- factoextra::fviz_dend(\n  clust,\n  k = 2,                                # number of groups\n  rect = FALSE,                          # draw rectangles around groups\n  rect_fill = TRUE,                     # fill the rectangles\n  rect_border = \"gray30\",              # color of the rectangle borders\n  cex = 0.8,                            # size of the label text\n  k_colors = c(\"#3A5FCD\", \"red\"),      # colors of the groups\n  color_labels_by_k = TRUE,            # color labels according to groups\n  labels_track_height = 0.8,           # height of the label track\n  horiz = TRUE,\n  main = \" \",\n  ) +  labs(y = \"Euclidean distance \") +\n  theme(axis.text.x = element_text(size = 18),\n        axis.title.x = element_text(size = 20) # increase numbers on the Y axis\n  ) +\n  theme_bw()\nprint(fig_blups)\n\n```\n\nData preparation\n\n```{r}\ndata2 <- left_join(data1, blups)\n\n\ndata3 <- data2 |> \n  group_by(estudo, tolerance_ad, cultivar, GROUP, prod_class) |> \n  summarize(sev = mean(sev),\n            prod = mean(prod))\n\n\n```\n\n```{r}\n# Fit random coefficients model: varying intercept and slope by STUDY\n\ndf <- data3 |> \n  mutate(GROUP = factor(GROUP),\n         STUDY = factor(estudo))  # If not already a factor\n\n\nmodel0 <- lmer(prod ~ sev  + (sev | STUDY), data = df)\nmodel <- lmer(prod ~ sev * GROUP + (sev | STUDY), data = df)\nanova(model0, model)\ncar::Anova(model)\n\n# Random effect structure\nranef(model)\n\n# Optional: extract slope and intercept per STUDY\ncoef(model)$STUDY\n\n\n```\n\n# Moderators\n\n### Susceptibility levels used as a moderator\n\nAdding the interaction between severity and susceptibility group did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n# susceptibility levels\n\nmodel_full <- lmer(prod ~ sev * GROUP + (sev | STUDY), data = df)\nmodel_no_interaction <- lmer(prod ~ sev + GROUP + (sev | STUDY), data = df)\nmodel_no_group <- lmer(prod ~ sev + (sev | STUDY), data = df)\nanova(model_no_group, model_no_interaction, model_full)\n\n```\n\n### Tolerance group used as a moderator\n\nAdding the interaction between severity andtolerance group did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n# tolerance group\ndf2 <- data1 |> \n  mutate(tolerance_ad = factor(tolerance_ad),\n         estudo = factor(estudo))\n\nmodel_full <- lmer(prod ~ sev * tolerance_ad + (sev | estudo), data = df2)\nmodel_no_interaction <- lmer(prod ~ sev + tolerance_ad + (sev | estudo), data = df2)\nmodel_no_group <- lmer(prod ~ sev + (sev | estudo), data = df2)\nanova(model_no_group, model_no_interaction, model_full)\n```\n\n### Yield class used as a moderator\n\nAdding the interaction between severity and yield class improved the model fit.\n\n```{r}\n# prod class\ndf3 <- data1 |> \n  mutate(prod_class = factor(prod_class),\n         estudo = factor(estudo))  # If not already a factor\n\nmodel_full <- lmer(prod ~ sev * prod_class + (sev | estudo), data = df3)\nmodel_no_interaction <- lmer(prod ~ sev + prod_class + ( sev | estudo), data = df3)\nmodel_no_group <- lmer(prod ~ sev + (sev | estudo), data = df3)\nanova(model_no_group, model_no_interaction, model_full)\n\nsummary(model_full)\n```\n\nGraphical visualization of how yield class affects the relationship as a moderating variable.\n\n```{r}\nfig_pc1 <- data3 |> \n  ggplot(aes(sev + 1, prod, color = factor(prod_class))) +\n  scale_color_manual(\n    name = \"Yield Class\", \n    values = c(\"baixa\" = \"#ff9688\", \"alta\" = \"#3A5FCD\"),\n    labels = c(\"baixa\" = \"Low\", \"alta\" = \"High\")\n  ) +\n  theme_bw()+\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~estudo)+\n  labs(y = \"Yield (Kg/ha)\",x = \"Severity score\")\n\nfig_pc1\n```\n\n### Severity class used as a moderator\n\nAdding the interaction between severity and severity class did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n#sev class\nmed_sev <- sev_dif |> \n  summarise(med_sev = median(enfez, na.rm = TRUE)) |> \n  pull(med_sev)\n\ndf4 <- data1 |> \n  mutate(sev_class = factor(ifelse(sev > med_sev, \"alta\", \"baixa\")))\n\nmodel_full <- lmer(prod ~ sev * sev_class + (sev | estudo), data = df4)\nmodel_no_interaction <- lmer(prod ~ sev + sev_class + (sev | estudo), data = df4)\nmodel_no_group <- lmer(prod ~ sev + (sev | estudo), data = df4)\nanova(model_no_group, model_no_interaction, model_full)\n\n\n```\n\n### Foliar spot pressure used as a moderator\n\nAdding the interaction between severity and foliar spot pressure did not improve the model fit, indicating that severity affects production similarly across groups.\n\n```{r}\n#foliar spot pressure\nmed_spots <- sev_dif |> \n  summarise(med_spots = median(manchas_totais, na.rm = TRUE)) |> \n  pull(med_spots)\n\ndf5 <- sev_dif |> \n  mutate(spot_press = factor(ifelse(manchas_totais > med_spots, \"alta\", \"baixa\")))\n\nmodel_full <- lmer(prod ~ enfez * spot_press + (enfez | estudo), data = df5)\nmodel_no_interaction <- lmer(prod ~ enfez + spot_press + (enfez | estudo), data = df5)\nmodel_no_group <- lmer(prod ~ enfez + (enfez | estudo), data = df5)\nanova(model_no_group, model_no_interaction, model_full)\n        \n\n```\n\n# How does yield class affect corn production?\n\nWe adjusted the model coefficients for the high- and low-productivity classes and then calculated the damage coefficient for each of them.\n\n```{r}\n\nintercept_baixa <- 6867.64\nslope_baixa <- -868.14\n\nintercept_alta <- intercept_baixa + 2160.70\nslope_alta <- slope_baixa + 197.18\n\npul_baixa = (slope_baixa/intercept_baixa) * 100\npul_alta = (slope_alta) / (intercept_alta) * 100\n\npul_baixa\npul_alta\n```\n\nThe confidence interval was calculated.\n\n```{r}\nconfint(model_full)\n```\n\nAll of the above information was transformed into a graph for better visualization.\n\n```{r}\n\n# Confidence intervals that you obtained\nci <- tribble(\n  ~term,                ~low,          ~high,\n  \"(Intercept)\",        6060.447,      7647.010,\n  \"sev\",               -1049.560,     -697.426,\n  \"prod_classalta\",     1756.064,      2558.214,\n  \"sev:prod_classalta\",   32.024,       366.974\n)\n\n# Sequence of severity\nsev_seq <- seq(0, 5, length.out = 100)\n\n# ---- Low productivity ----\nintercept_baixa_low  <- ci$low[ci$term==\"(Intercept)\"]\nintercept_baixa_high <- ci$high[ci$term==\"(Intercept)\"]\nslope_baixa_low      <- ci$low[ci$term==\"sev\"]\nslope_baixa_high     <- ci$high[ci$term==\"sev\"]\n\ndf_baixa <- tibble(\n  sev = sev_seq,\n  fit_low  = intercept_baixa_low  + slope_baixa_low  * sev,\n  fit_high = intercept_baixa_high + slope_baixa_high * sev,\n  prod_class = \"Low\"\n)\n\n# ---- High productivity ----\nintercept_alta_low  <- intercept_baixa_low  + ci$low[ci$term==\"prod_classalta\"]\nintercept_alta_high <- intercept_baixa_high + ci$high[ci$term==\"prod_classalta\"]\nslope_alta_low      <- slope_baixa_low  + ci$low[ci$term==\"sev:prod_classalta\"]\nslope_alta_high     <- slope_baixa_high + ci$high[ci$term==\"sev:prod_classalta\"]\n\ndf_alta <- tibble(\n  sev = sev_seq,\n  fit_low  = intercept_alta_low  + slope_alta_low  * sev,\n  fit_high = intercept_alta_high + slope_alta_high * sev,\n  prod_class = \"High\"\n)\n\n# Combine everything\ndf_all <- bind_rows(df_baixa, df_alta)\n\n# Plot the graph\nYc_plot <- ggplot(df_all, aes(x = sev, color = prod_class, fill = prod_class)) +\n  geom_ribbon(aes(ymin = fit_low, ymax = fit_high), alpha = 0.2, color = NA) +\n  geom_line(aes(y = (fit_low + fit_high)/2), size = 1.5) +\n  scale_color_manual(values = c(\"Low\" = \"red\", \"High\" = \"#3A5FCD\")) +\n  scale_fill_manual(values = c(\"Low\" = \"red\", \"High\" = \"#3A5FCD\")) +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  scale_y_continuous(breaks = seq(0, 12000, by = 2000), limits = c(0, 12000)) +\n  labs(\n    x = \"Scale score -1\", \n    y = \"Yield (kg/ha)\",\n    color = \"Yield class\",\n    fill  = \"Yield class\"\n  ) +\n  theme_bw(base_size = 18) +\n  theme(\n     panel.grid.minor = element_blank(),\n    text = element_text(size = 20),\n    axis.text.x = element_text(size = 18),\n    axis.text.y = element_text(size = 18),\n    legend.position = \"top\",\n    plot.title = element_text(hjust = 0.5, size = 18)\n  ) +\n  annotate(\"text\", x = 1.5, y = 10300, label = \"DC: -7.43%\", color = \"#3A5FCD\", hjust = 0) +\n  annotate(\"text\", x = 1, y = 3000, label = \"DC: -12.64%\", color = \"red\", hjust = 0)\n\nYc_plot\n\n```\n\nA graph was created showing the relative yield loss (%) as a function of disease severity.\n\n```{r}\n# Definitions of the mean DCs (as you already noted)\ndc_high <- -7.43   # %\ndc_low  <- -12.64  # %\n\n# Sequence of severity\nsev_seq <- 0:5\n\n# Create dataframe for plotting\ndf_rel <- tibble(\n  sev = rep(sev_seq, 2),\n  DC  = c(dc_low * sev_seq, dc_high * sev_seq),   # cumulative loss\n  prod_class = rep(c(\"Low\", \"High\"), each = length(sev_seq))\n)\n\n# Relative plot\nDC_plot <- ggplot(df_rel, aes(x = sev, y = DC, color = prod_class)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 3) +\n  scale_color_manual(values = c(\"Low\" = \"red\", \"High\" = \"#3A5FCD\")) +\n  scale_x_continuous(breaks = 0:5, limits = c(0, 5)) +\n  labs(\n    x = \"Scale score -1\",\n    y = \"Relative Yield Loss (%)\",\n    color = \"Yield class\"\n  ) +\n  theme_bw(base_size = 18) +\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_text(size = 16),\n    axis.text.y = element_text(size = 16)\n  ) +\n  annotate(\"text\", x = 5, y = dc_high*5, \n           label = paste0(\"Max RYL: \", dc_high*5, \"%\"), color = \"#3A5FCD\", hjust = 1, vjust = -5) +\n  annotate(\"text\", x = 5, y = dc_low*5, \n           label = paste0(\"Max RYL: \", dc_low*5, \"%\"), color = \"red\", hjust = 1.4, vjust = 0.1)\n\nDC_plot\n\n```\n\nDue to the observed difference, we investigated whether plants from different yield classes exhibited distinct severity distributions through a density plot.\n\n```{r}\nden_ydcl <- ggplot(data3, aes(x = sev + 1, fill = prod_class)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"baixa\" = \"#ff9688\", \"alta\" = \"#3A5FCD\"), \n                     labels = c(\"baixa\" = \"Low\", \"alta\" = \"High\")) +\n  scale_x_continuous(limits = c(1, 6), breaks = seq(1, 6, 1)) +\n  labs(\n    x = \"Scale score -1\",\n    y = \"Density\",\n    fill = \"Yield Class\"\n  ) +\n  theme_bw()\nden_ydcl\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"new_code2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"visual","theme":["flatly","flatly"],"title":"Modeling of yield losses caused by the corn stunt disease complex ","author":"Marcelo Gonçalves","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}